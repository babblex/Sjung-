{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red24\green24\blue24;\red193\green193\blue193;
}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\cssrgb\c12157\c12157\c12157;\cssrgb\c80000\c80000\c80000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Byte-compiled / optimized / DLL files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 __pycache__/\cb1 \
\cb3 *.py[cod]\cb1 \
\cb3 *$py.class\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # C extensions\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.so\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Distribution / packaging\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .Python\cb1 \
\cb3 build/\cb1 \
\cb3 develop-eggs/\cb1 \
\cb3 dist/\cb1 \
\cb3 downloads/\cb1 \
\cb3 eggs/\cb1 \
\cb3 .eggs/\cb1 \
\cb3 lib/\cb1 \
\cb3 lib64/\cb1 \
\cb3 parts/\cb1 \
\cb3 sdist/\cb1 \
\cb3 var/\cb1 \
\cb3 wheels/\cb1 \
\cb3 share/python-wheels/\cb1 \
\cb3 *.egg-info/\cb1 \
\cb3 .installed.cfg\cb1 \
\cb3 *.egg\cb1 \
\cb3 MANIFEST\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PyInstaller\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  Usually these files are written by a python script from a template\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  before PyInstaller builds the exe, so as to inject date/other infos into it.\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.manifest\cb1 \
\cb3 *.spec\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Installer logs\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 pip-log.txt\cb1 \
\cb3 pip-delete-this-directory.txt\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Unit test / coverage reports\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 htmlcov/\cb1 \
\cb3 .tox/\cb1 \
\cb3 .nox/\cb1 \
\cb3 .coverage\cb1 \
\cb3 .coverage.*\cb1 \
\cb3 .cache\cb1 \
\cb3 nosetests.xml\cb1 \
\cb3 coverage.xml\cb1 \
\cb3 *.cover\cb1 \
\cb3 *.py,cover\cb1 \
\cb3 .hypothesis/\cb1 \
\cb3 .pytest_cache/\cb1 \
\cb3 cover/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Translations\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.mo\cb1 \
\cb3 *.pot\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Django stuff:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.log\cb1 \
\cb3 local_settings.py\cb1 \
\cb3 db.sqlite3\cb1 \
\cb3 db.sqlite3-journal\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Flask stuff:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 instance/\cb1 \
\cb3 .webassets-cache\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Scrapy stuff:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .scrapy\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Sphinx documentation\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 docs/_build/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PyBuilder\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pybuilder/\cb1 \
\cb3 target/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Jupyter Notebook\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .ipynb_checkpoints\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # IPython\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 profile_default/\cb1 \
\cb3 ipython_config.py\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # pyenv\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   For a library or package, you might want to ignore these files since the code is\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   intended to run in multiple environments; otherwise, check them in:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # .python-version\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pipenv\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   However, in case of collaboration, if having platform-specific dependencies or dependencies\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   having no cross-platform support, pipenv may install dependencies that don't work, or not\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   install all needed dependencies.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #Pipfile.lock\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # UV\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   This is especially recommended for binary packages to ensure reproducibility, and is more\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   commonly ignored for libraries.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #uv.lock\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # poetry\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   This is especially recommended for binary packages to ensure reproducibility, and is more\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   commonly ignored for libraries.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #poetry.lock\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pdm\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #pdm.lock\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   https://pdm.fming.dev/latest/usage/project/#working-with-version-control\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pdm.toml\cb1 \
\cb3 .pdm-python\cb1 \
\cb3 .pdm-build/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 __pypackages__/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Celery stuff\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 celerybeat-schedule\cb1 \
\cb3 celerybeat.pid\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # SageMath parsed files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.sage.py\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Environments\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .env\cb1 \
\cb3 .venv\cb1 \
\cb3 env/\cb1 \
\cb3 venv/\cb1 \
\cb3 ENV/\cb1 \
\cb3 env.bak/\cb1 \
\cb3 venv.bak/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Spyder project settings\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .spyderproject\cb1 \
\cb3 .spyproject\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Rope project settings\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .ropeproject\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # mkdocs documentation\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 /site\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # mypy\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .mypy_cache/\cb1 \
\cb3 .dmypy.json\cb1 \
\cb3 dmypy.json\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Pyre type checker\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pyre/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # pytype static type analyzer\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pytype/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Cython debug symbols\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 cython_debug/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PyCharm\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  and can be added to the global gitignore or merged into this file.  For a more nuclear\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  option (not recommended) you can uncomment the following to ignore the entire idea folder.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #.idea/\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Ruff stuff:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .ruff_cache/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PyPI configuration file\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pypirc\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Created by https://www.toptal.com/developers/gitignore/api/python,windows,macos,visualstudiocode,flask\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Edit at https://www.toptal.com/developers/gitignore?templates=python,windows,macos,visualstudiocode,flask\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 ### Flask ###\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 instance/*\cb1 \
\cb3 !instance/.gitignore\cb1 \
\cb3 .webassets-cache\cb1 \
\cb3 .env\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 ### Flask.Python Stack ###\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Byte-compiled / optimized / DLL files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 __pycache__/\cb1 \
\cb3 *.py[cod]\cb1 \
\cb3 *$py.class\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # C extensions\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.so\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Distribution / packaging\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .Python\cb1 \
\cb3 build/\cb1 \
\cb3 develop-eggs/\cb1 \
\cb3 dist/\cb1 \
\cb3 downloads/\cb1 \
\cb3 eggs/\cb1 \
\cb3 .eggs/\cb1 \
\cb3 lib/\cb1 \
\cb3 lib64/\cb1 \
\cb3 parts/\cb1 \
\cb3 sdist/\cb1 \
\cb3 var/\cb1 \
\cb3 wheels/\cb1 \
\cb3 share/python-wheels/\cb1 \
\cb3 *.egg-info/\cb1 \
\cb3 .installed.cfg\cb1 \
\cb3 *.egg\cb1 \
\cb3 MANIFEST\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PyInstaller\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  Usually these files are written by a python script from a template\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  before PyInstaller builds the exe, so as to inject date/other infos into it.\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.manifest\cb1 \
\cb3 *.spec\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Installer logs\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 pip-log.txt\cb1 \
\cb3 pip-delete-this-directory.txt\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Unit test / coverage reports\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 htmlcov/\cb1 \
\cb3 .tox/\cb1 \
\cb3 .nox/\cb1 \
\cb3 .coverage\cb1 \
\cb3 .coverage.*\cb1 \
\cb3 .cache\cb1 \
\cb3 nosetests.xml\cb1 \
\cb3 coverage.xml\cb1 \
\cb3 *.cover\cb1 \
\cb3 *.py,cover\cb1 \
\cb3 .hypothesis/\cb1 \
\cb3 .pytest_cache/\cb1 \
\cb3 cover/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Translations\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.mo\cb1 \
\cb3 *.pot\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Django stuff:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.log\cb1 \
\cb3 local_settings.py\cb1 \
\cb3 db.sqlite3\cb1 \
\cb3 db.sqlite3-journal\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Flask stuff:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 instance/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Scrapy stuff:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .scrapy\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Sphinx documentation\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 docs/_build/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PyBuilder\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pybuilder/\cb1 \
\cb3 target/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Jupyter Notebook\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .ipynb_checkpoints\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # IPython\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 profile_default/\cb1 \
\cb3 ipython_config.py\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # pyenv\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   For a library or package, you might want to ignore these files since the code is\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   intended to run in multiple environments; otherwise, check them in:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # .python-version\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pipenv\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   However, in case of collaboration, if having platform-specific dependencies or dependencies\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   having no cross-platform support, pipenv may install dependencies that don't work, or not\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   install all needed dependencies.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #Pipfile.lock\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # poetry\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   This is especially recommended for binary packages to ensure reproducibility, and is more\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   commonly ignored for libraries.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #poetry.lock\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pdm\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #pdm.lock\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   https://pdm.fming.dev/#use-with-ide\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pdm.toml\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 __pypackages__/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Celery stuff\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 celerybeat-schedule\cb1 \
\cb3 celerybeat.pid\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # SageMath parsed files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.sage.py\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Environments\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .venv\cb1 \
\cb3 env/\cb1 \
\cb3 venv/\cb1 \
\cb3 ENV/\cb1 \
\cb3 env.bak/\cb1 \
\cb3 venv.bak/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Spyder project settings\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .spyderproject\cb1 \
\cb3 .spyproject\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Rope project settings\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .ropeproject\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # mkdocs documentation\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 /site\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # mypy\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .mypy_cache/\cb1 \
\cb3 .dmypy.json\cb1 \
\cb3 dmypy.json\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Pyre type checker\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pyre/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # pytype static type analyzer\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .pytype/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Cython debug symbols\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 cython_debug/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # PyCharm\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  and can be added to the global gitignore or merged into this file.  For a more nuclear\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  option (not recommended) you can uncomment the following to ignore the entire idea folder.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #.idea/\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 ### macOS ###\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # General\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .DS_Store\cb1 \
\cb3 .AppleDouble\cb1 \
\cb3 .LSOverride\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Icon must end with two \\r\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 Icon\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Thumbnails\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 ._*\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Files that might appear in the root of a volume\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .DocumentRevisions-V100\cb1 \
\cb3 .fseventsd\cb1 \
\cb3 .Spotlight-V100\cb1 \
\cb3 .TemporaryItems\cb1 \
\cb3 .Trashes\cb1 \
\cb3 .VolumeIcon.icns\cb1 \
\cb3 .com.apple.timemachine.donotpresent\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Directories potentially created on remote AFP share\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .AppleDB\cb1 \
\cb3 .AppleDesktop\cb1 \
\cb3 Network Trash Folder\cb1 \
\cb3 Temporary Items\cb1 \
\cb3 .apdisk\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 ### macOS Patch ###\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # iCloud generated files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.icloud\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 ### Python ###\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Byte-compiled / optimized / DLL files\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # C extensions\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Distribution / packaging\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # PyInstaller\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  Usually these files are written by a python script from a template\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  before PyInstaller builds the exe, so as to inject date/other infos into it.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Installer logs\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Unit test / coverage reports\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Translations\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Django stuff:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Flask stuff:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Scrapy stuff:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Sphinx documentation\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # PyBuilder\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Jupyter Notebook\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # IPython\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pyenv\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   For a library or package, you might want to ignore these files since the code is\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   intended to run in multiple environments; otherwise, check them in:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # .python-version\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pipenv\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   However, in case of collaboration, if having platform-specific dependencies or dependencies\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   having no cross-platform support, pipenv may install dependencies that don't work, or not\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   install all needed dependencies.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # poetry\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   This is especially recommended for binary packages to ensure reproducibility, and is more\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   commonly ignored for libraries.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pdm\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   in version control.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #   https://pdm.fming.dev/#use-with-ide\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Celery stuff\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # SageMath parsed files\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Environments\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Spyder project settings\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Rope project settings\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # mkdocs documentation\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # mypy\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Pyre type checker\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # pytype static type analyzer\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Cython debug symbols\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # PyCharm\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  and can be added to the global gitignore or merged into this file.  For a more nuclear\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  option (not recommended) you can uncomment the following to ignore the entire idea folder.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 ### Python Patch ###\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 poetry.toml\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # ruff\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .ruff_cache/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # LSP config files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 pyrightconfig.json\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 ### VisualStudioCode ###\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .vscode/*\cb1 \
\cb3 !.vscode/settings.json\cb1 \
\cb3 !.vscode/tasks.json\cb1 \
\cb3 !.vscode/launch.json\cb1 \
\cb3 !.vscode/extensions.json\cb1 \
\cb3 !.vscode/*.code-snippets\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Local History for Visual Studio Code\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .history/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Built Visual Studio Code Extensions\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.vsix\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 ### VisualStudioCode Patch ###\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Ignore all local history of files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 .history\cb1 \
\cb3 .ionide\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 ### Windows ###\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Windows thumbnail cache files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 Thumbs.db\cb1 \
\cb3 Thumbs.db:encryptable\cb1 \
\cb3 ehthumbs.db\cb1 \
\cb3 ehthumbs_vista.db\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Dump file\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.stackdump\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Folder config file\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 [Dd]esktop.ini\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Recycle Bin used on file shares\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 $RECYCLE.BIN/\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Windows Installer files\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.cab\cb1 \
\cb3 *.msi\cb1 \
\cb3 *.msix\cb1 \
\cb3 *.msm\cb1 \
\cb3 *.msp\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Windows shortcuts\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 *.lnk\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # End of https://www.toptal.com/developers/gitignore/api/python,windows,macos,visualstudiocode,flask\cf4 \cb1 \strokec4 \
}